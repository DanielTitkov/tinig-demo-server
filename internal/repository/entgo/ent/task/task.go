// Code generated by entc, DO NOT EDIT.

package task

import (
	"time"
)

const (
	// Label holds the string label denoting the task type in the database.
	Label = "task"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldSlug holds the string denoting the slug field in the database.
	FieldSlug = "slug"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldDescription holds the string denoting the description field in the database.
	FieldDescription = "description"
	// FieldCode holds the string denoting the code field in the database.
	FieldCode = "code"
	// FieldActive holds the string denoting the active field in the database.
	FieldActive = "active"
	// FieldDeleteTime holds the string denoting the delete_time field in the database.
	FieldDeleteTime = "delete_time"
	// FieldParams holds the string denoting the params field in the database.
	FieldParams = "params"
	// FieldMeta holds the string denoting the meta field in the database.
	FieldMeta = "meta"

	// EdgeItems holds the string denoting the items edge name in mutations.
	EdgeItems = "items"
	// EdgeUser holds the string denoting the user edge name in mutations.
	EdgeUser = "user"
	// EdgeType holds the string denoting the type edge name in mutations.
	EdgeType = "type"

	// Table holds the table name of the task in the database.
	Table = "tasks"
	// ItemsTable is the table the holds the items relation/edge.
	ItemsTable = "items"
	// ItemsInverseTable is the table name for the Item entity.
	// It exists in this package in order to avoid circular dependency with the "item" package.
	ItemsInverseTable = "items"
	// ItemsColumn is the table column denoting the items relation/edge.
	ItemsColumn = "task_items"
	// UserTable is the table the holds the user relation/edge.
	UserTable = "tasks"
	// UserInverseTable is the table name for the User entity.
	// It exists in this package in order to avoid circular dependency with the "user" package.
	UserInverseTable = "users"
	// UserColumn is the table column denoting the user relation/edge.
	UserColumn = "user_tasks"
	// TypeTable is the table the holds the type relation/edge.
	TypeTable = "tasks"
	// TypeInverseTable is the table name for the TaskType entity.
	// It exists in this package in order to avoid circular dependency with the "tasktype" package.
	TypeInverseTable = "task_types"
	// TypeColumn is the table column denoting the type relation/edge.
	TypeColumn = "task_type_tasks"
)

// Columns holds all SQL columns for task fields.
var Columns = []string{
	FieldID,
	FieldCreateTime,
	FieldUpdateTime,
	FieldSlug,
	FieldTitle,
	FieldDescription,
	FieldCode,
	FieldActive,
	FieldDeleteTime,
	FieldParams,
	FieldMeta,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the Task type.
var ForeignKeys = []string{
	"task_type_tasks",
	"user_tasks",
}

var (
	// DefaultCreateTime holds the default value on creation for the create_time field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the update_time field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the update_time field.
	UpdateDefaultUpdateTime func() time.Time
	// SlugValidator is a validator for the "slug" field. It is called by the builders before save.
	SlugValidator func(string) error
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// CodeValidator is a validator for the "code" field. It is called by the builders before save.
	CodeValidator func(string) error
	// DefaultActive holds the default value on creation for the active field.
	DefaultActive bool
)
